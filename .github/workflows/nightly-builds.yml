name: Build (Manual)

on:
  workflow_dispatch:  # run from the Actions tab

jobs:
  build:
    runs-on: windows-latest

    env:
      APP_PROJECT: LGSTrayUI/LGSTrayUI.csproj   # <-- change if your app .csproj lives elsewhere
      RID: win-x64

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      # Restore with the runtime so assets exist for net8.0(-windows)/win-x64
      - name: Restore
        run: dotnet restore $env:APP_PROJECT -r $env:RID

      # Build the app project (not the .sln)
      - name: Build (Release)
        run: dotnet build $env:APP_PROJECT -c Release -r $env:RID --no-restore

      # Publish a self-contained, single-file app (no .NET runtime needed).
      # If you prefer framework-dependent, see note below.
      - name: Publish
        run: >
          dotnet publish $env:APP_PROJECT
          -c Release
          -r $env:RID
          --self-contained true
          /p:PublishSingleFile=true
          -o out/win-x64
          --no-build

      - name: Zip artifact
        shell: pwsh
        run: |
          $OutDir = Resolve-Path 'out/win-x64'
          New-Item -ItemType Directory -Force -Path 'artifacts' | Out-Null
          $ZipPath = Join-Path 'artifacts' 'LGSTrayBattery.zip'
          if (Test-Path $ZipPath) { Remove-Item $ZipPath -Force }
          Compress-Archive -Path "$OutDir\*" -DestinationPath $ZipPath
          "ZIP_PATH=$ZipPath" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LGSTrayBattery-build
          path: ${{ env.ZIP_PATH }}
          if-no-files-found: error
